#! /bin/bash

testingDirectory=/home/ssdavis/40/p2/Testing

if [ $# -ne 1 ]; then
  echo "testhw usage: testhw CPU_src_directory"
  exit
fi

cd $1
rm -f *.out *.o *.txt &> /dev/null

echo -n "Scores from p1 for " > results.txt

if [ -e authors.csv ]; then
  dos2unix -q authors.csv
  awk -F, {'for (i = 2; i <= NF; ++i) printf"%s ", $i'} authors.csv >> results.txt
  echo -e "\n"
  awk -F, 'NR < 4 {for (i = 2; i <= NF; ++i) printf"%s", $i; printf"\n";}' authors.csv > names.txt
  echo -e "\nNote that format is: e-mail<comma>last name<comma>first name" >> results.txt
  echo "For example: ssdavis@ucdavis.edu,Davis,Sean"  >> results.txt
  awk -F, {'printf"%s ", $1'} authors.csv > addresses
else
  echo  "You need to create an authors.csv file!!!! No one will receive credit for this assignment"  >> results.txt
  echo "$1@ucdavis.edu" > addresses
  finger ${PWD##*/} | awk 'NR == 1 {printf"%s,%s", $5, $4}' > names.txt
fi


echo -en "\nAddresses used: " >> results.txt
cat addresses >> results.txt
echo " " >> results.txt
echo "Directory: $1"

dddScore=0
echo "Ins.c: " >> results.txt
if [ -e Ins.c ]; then
  gcc Ins.c
  rm ddd.txt &> /dev/null
  if [ -e a.out ]; then
    (a.out  12 5 9 3 2 25 8 19 200 10 9 > ddd.txt )&
    sleep 1
    pkill a.out &> /dev/null
    diff ddd.txt $testingDirectory/ddd.txt &> temp

    if [[ ( ! -e ddd.txt) || ( -s temp ) ]]; then
      echo -e "\nDifferences on ddd.txt" >> results.txt
      echo Yours: >> results.txt
      cat ddd.txt  >> results.txt
      echo -e "\nSean's:" >> results.txt
      cat $testingDirectory/ddd.txt >> results.txt
      echo " " >> results.txt;
    else
      echo OK >> results.txt
      dddScore=10
    fi
  else
    echo "Ins.c does not compile." >> results.txt
  fi
else
  echo "Ins.c not found." >> results.txt
fi # if -e Ins.c

echo " " >> results.txt
makemakeScore=0
echo "Checking makemake.sh"
echo -e "\nmakemake.sh testing:" >> results.txt
rm -rf Test &> /dev/null

if [ -e makemake.sh ]; then
  mkdir Test
  cp $testingDirectory/MakeFiles/* makemake.sh Test 
  cd Test
  
  echo "makemake.sh without executable provided error message:" >> ../results.txt

  makemake.sh &> ../makeOut1.txt 
  diff ../makeOut1.txt $testingDirectory/makeOut1.txt &> temp
  diff ../makeOut1.txt $testingDirectory/makeOut1.txt > text.txt
  if [ -s temp ]; then
    echo -e "\nYours: " >> ../results.txt
    cat ../makeOut1.txt  >> ../results.txt
    echo -e "\nSeans: " >> ../results.txt 
    cat $testingDirectory/makeOut1.txt >> ../results.txt
  else
    echo OK >> ../results.txt
    (( ++makemakeScore ))
  fi
 
  rm -f *akefile &> /dev/null
  echo  "makemake.sh appt.out: "  >> ../results.txt
  makemake.sh appt.out

  if [ -s Makefile ] ; then 
    cp -f Makefile ../makeOut2.txt
    diff -b Makefile $testingDirectory/makeOut2.txt &> temp

    if [ -s temp ]; then
      echo -e "\nYours: " >> ../results.txt
      cat Makefile  >> ../results.txt
      echo -e "\nSeans: " >> ../results.txt
      cat  $testingDirectory/makeOut2.txt >> ../results.txt
    else
      echo OK >> ../results.txt
      (( makemakeScore+=10 ))
    fi # if differnces between Makefiles
  else
    echo "Makefile not created."  >> ../results.txt
  fi

  rm -f *akefile &> /dev/null
  echo  "makemake.sh  appt1.out -O2 -pg : "  >> ../results.txt
  makemake.sh appt1.out -02 -pg

  if [ -s Makefile ] ; then
    cp Makefile ../makeOut3.txt
    diff -b Makefile $testingDirectory/makeOut3.txt &> temp

    if [ -s temp ]; then
      echo -e "\nYours: " >> ../results.txt
      cat Makefile  >> ../results.txt
      echo -e "\nSeans: " >> ../results.txt
      cat  $testingDirectory/makeOut3.txt >> ../results.txt
    else
      echo OK >> ../results.txt
      (( makemakeScore+=9 ))
    fi # if differnces between Makefiles
  else
    echo "Makefile not created."  >> ../results.txt
  fi

  cd ..
else
  echo No makemake.sh >> results.txt
fi


echo " " >> results.txt
rm -rf Test &> /dev/null
NoCommentsScore=0
echo NoComments.sh: >> results.txt

if [ -e NoComments.sh ] ; then
  mkdir Test
  cp -f NoComments.sh  $testingDirectory/NC/*.c Test 
  cd Test
 
  (NoComments.sh) &
  sleep 1
  pkill NoComments.sh
  fileNum=1

  while [[ $fileNum -lt 4 ]]; do
    echo "NC$fileNum.c:"
    echo "NC$fileNum.c:" >> ../results.txt
        
    if [ -e NC$fileNum.c ]; then
      cp NC$fileNum.c ../NCOut$fileNum.txt
      diff NC$fileNum.c $testingDirectory/NC/NCOut$fileNum.txt > temp
      
      if [ -s temp ]; then
        echo "There are differences between your output and Sean's." >> ../results.txt
        echo "Yours: " >> ../results.txt
        cat  NC$fileNum.c >> ../results.txt
        echo "Sean's:" >> ../results.txt
        cat $testingDirectory/NC/NCOut$fileNum.txt 
      else
        echo OK >> ../results.txt
        (( NoCommentsScore += 1 )) 
      fi  # if temp created
       
    else
      echo "No NC$fileNum.c found." >> ../results.txt
    fi

    fileNum=$((fileNum + 1))
  done  # for each file of the four files
  
  cd ..
else # if NoComments.sh found.
  echo No NoComments.sh >> results.txt
fi #NoComments

if [[ NoCommentsScore -eq 3 ]]; then
  NoCommentsScore=5
fi

rm -rf Test &> /dev/null
echo " " >> results.txt
HeadFilesScore=0
echo HeadFiles.sh: >> results.txt

if [ -e HeadFiles.sh ];  then
  mkdir Test
  cd Test
  cp $testingDirectory/HF/HF* ../HeadFiles.sh .
  echo "Non-interactive:" >> ../results.txt
  echo -n "prompts: " >> ../results.txt
  (HeadFiles.sh < $testingDirectory/HF/y.txt >> ../outHF1.txt)&
  sleep 1
  pkill HeadFiles.sh
  diff ../outHF1.txt $testingDirectory/HF/outHF1.txt > temp
  
  if [ -s temp ]; then
    echo "There are differences between your prompts and Sean's." >> ../results.txt
    echo "Yours: " >> ../results.txt
    cat  ../outHF1.txt >> ../results.txt
    echo "Sean's:" >> ../results.txt
    cat $testingDirectory/HF/outHF1.txt >> ../results.txt
  else
    echo OK >> ../results.txt
    HeadFilesScore=1
  fi  # if temp created

  echo " " >> ../results.txt
  echo -n "ls: " >> ../results.txt
  ls HF* > ../outHF2.txt 
  diff ../outHF2.txt $testingDirectory/HF/outHF2.txt > temp

  if [ -s temp ]; then
    echo "There are differences between your directory and Sean's." >> ../results.txt
    echo "Yours: " >> ../results.txt
    cat  ../outHF2.txt >> ../results.txt
    echo "Sean's:" >> ../results.txt
    cat $testingDirectory/HF/outHF2.txt >> ../results.txt
  else
    echo OK >> ../results.txt
    (( HeadFilesScore += 2 ))
  fi  # if temp created
  
  rm -f HF* &> /dev/null
  cp $testingDirectory/HF/HF* .
  echo "Interactive:" >> ../results.txt
  echo -n "ls: " >> ../results.txt

 (HeadFiles.sh HF1.txt HF3.c HF4.txt HF6.csv < $testingDirectory/HF/y.txt &> /dev/null)&
  sleep 1
  pkill HeadFiles.sh
  ls HF* > ../outHF3.txt
  diff ../outHF3.txt $testingDirectory/HF/outHF3.txt > temp

  if [ -s temp ]; then
    echo "There are differences between your directory and Sean's." >> ../results.txt
    echo "Yours: " >> ../results.txt
    cat  ../outHF3.txt >> ../results.txt
    echo "Sean's:" >> ../results.txt
    cat $testingDirectory/HF/outHF3.txt >> ../results.txt
  else
    echo OK >> ../results.txt
    (( HeadFilesScore += 2 ))
  fi  # if temp created

  cd ..
else
  echo No HeadFiles.sh >> ../results.txt
fi


rm -rf Test &> /dev/null
echo " " >> results.txt
stdioScore=0
echo stdio.sh: >> results.txt

if [ -s stdio.sh ] ; then
  mkdir Test
  cp -f stdio.sh  $testingDirectory/stdio/*.c Test 
  cd Test
  (stdio.sh) &
  sleep 1
  pkill stdio.sh
  fileNum=1

  while [[ $fileNum -lt 6 ]]; do
    echo "S$fileNum.c:"
    echo "S$fileNum.c:" >> ../results.txt
        
    if [ -e S$fileNum.c ]; then
      diff S$fileNum.c $testingDirectory/stdio/Out$fileNum.txt > temp

      if [ -s temp ]; then
        echo "There are differences between your output and Sean's." >> ../results.txt
        echo "Yours: " >> ../results.txt
        cat  S$fileNum.c >> ../results.txt
        echo "Sean's:" >> ../results.txt
        cat $testingDirectory/stdio/Out$fileNum.txt 
      else
        echo OK >> ../results.txt
        (( stdioScore += 1 )) 
      fi  # if temp created
       
    else
      echo "No S$fileNum.c found." >> ../results.txt
    fi

    fileNum=$((fileNum + 1))
  done  # for each file of the four files
  
  cd ..
else # if stdio.sh found.
  echo No stdio.sh found >> ../results.txt
fi #NoComments

totalScore=$(( $dddScore + $stdioScore + $makemakeScore + $HeadFilesScore + $NoCommentsScore ))
#echo $grepdirScore,$cpdirsScore,$makemakeScore,$gdbScore > results.csv 
echo ddd score: $dddScore out of 10 >> results.txt
echo makemake score: $makemakeScore out of 20 >> results.txt
echo NoComments.sh score: $NoCommentsScore out of 5 >> results.txt
echo HeadFiles.sh score: $HeadFilesScore out of 5 >> results.txt
echo stdio.sh score: $stdioScore out of 5 >> results.txt
echo "Total: $totalScore out of 45.">> results.txt


#  mailx -s "ECS 40 P2 Test Results" `cat addresses` < results.txt

# awk 'NR == 1 {printf"%s,", $0}' names.txt >> ../results.csv
#echo "${1%%/}, $totalScore,$dddScore,$makemakeScore,$NoCommentsScore,$HeadFilesScore,$stdioScore" >> ../results.csv
#authorCount=$(grep "@" authors.txt | wc -l)

#if [ $authorCount -gt 1 ]; then
#  awk 'NR == 2 {printf"%s,", $0}' names.txt >> ../results.csv
#echo "${1%%/}, $totalScore,$dddScore,$makemakeScore,$NoCommentsScore,$HeadFilesScore,$stdioScore" >> ../results.csv
#fi

